@model List<Products>

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}
@if (!string.IsNullOrEmpty(ViewBag.AlertMessage))
{
    <script>alert("@ViewBag.AlertMessage");</script>
}
<table class="table">

    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().SoldToCustomersCost)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().QuantityInStorage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Category)
            </th>
            <th>
                Quantity
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.GroupBy(x => x.department).Select(x => new
        {
            x.Key,
            Items = x
              .Select(z => z)
              .ToList()
        }))
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => item.Key.Description)
            </dt>
        <tb class="col-sm-2">
            @Html.DisplayFor(model => item.Key.Description)
        </tb>
        foreach (var productse in item.Items)
        {

            @if (productse.QuantityInDisplay != 0)
            {
                <tr>
                    <form asp-action="DisplayAction" method="post">
                        <td>
                            <label name="ProductKey">
                                @Html.DisplayFor(modelItem => productse.Id)
                            </label>
                        </td>
                        <input type="hidden" name="ProductKey" value="@Html.DisplayFor(modelItem => productse.Id)">
                        <td>
                            @Html.DisplayFor(modelItem => productse.SoldToCustomersCost)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => productse.Department)
                        </td>
                        <input type="hidden" name="Department" value="@Html.DisplayFor(modelItem => productse.Department)">
                        <td>
                            @Html.DisplayFor(modelItem => productse.QuantityInStorage)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => productse.Category)
                        </td>
                        <td>
                            <input type="number" name="NumToDisplay" />
                        </td>
                        <input type="hidden" name="DisplayAction" value="Display">
                        <td>
                            <input type="submit" value="Display" name="DisplayBtn" class="btn" />
                        </td>
                    </form>
                </tr>
            }
        }
    }
        </tbody>
    </table>
    <label>
        <b>New Product To be Displayed</b>
    </label>
    <form asp-action="DisplayAction" method="post">
        <label>
            Product Id to be Displayed
        </label>
        <td>
            <input type="number" name="ProductKey" />
        </td>
        <br />
        <label>
            Quantity for Display
        </label>
        <td>
            <input type="number" name="NumToDisplay" />
        </td>
        <br />
        <label>
            Department To be Displayed In
        </label>
        <td>
            <input type="number" name="Department" />
        </td>
        <input type="hidden" name="DisplayAction" value="Create">
        <br />
        <td>
            <input type="submit" value="Create" name="DisplayBtn" class="btn" />
        </td>
    </form>
